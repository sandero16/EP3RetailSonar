<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="RetailSonarJPA" transaction-type="JTA">
	<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		<jta-data-source>jdbc/RetailSonar</jta-data-source>
		
		<class>data.Group</class>
		<class>data.User</class>
		<class>data.Bedrijf</class>
		<class>data.FiliaalGegevens</class>
		<class>data.Taak</class>
		<class>data.Afbeeldingen</class>
		<class>data.Customeigenschap</class>
		<class>data.Customeigenschapingevuld</class>
		<class>data.Eigenschappen</class>
		<class>data.Eigenschappenbedrijf</class>
		<class>data.Eigenschappenbedrijfingevuld</class>
		<class>data.Categorie</class>
		<class>data.Afstand</class>
		<class>data.Oppervlakte</class>
		<class>data.OppervlaktenBedrijf</class>
		
		
		<properties>
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/RetailSonarHofinal?verifyServerCertificate=false&amp;useSSL=false"/>
			<property name="javax.persistence.jdbc.user" value="root"/>
			<property name="javax.persistence.jdbc.password" value="root"/>
			<property name="eclipselink.ddl-generation" value="create-only"/>
			<property name="eclipselink.ddl-genertion.output-mode" value="database"/>
			
		
		
			<!--  tables will be created only if they do not exist. Use for production 
			<property name="eclipselink.ddl-generation" value="create-tables"/>
			-->
			
			<!--  will first drop the existing table, and then create the new table. Use for development 
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>
			-->
			<property name="eclipselink.logging.level" value="INFO"/>
		</properties>
	</persistence-unit>
</persistence>
